retom# MVP:
1. Views:
 a. Home
  - auth popup asks if user wants to register or stay on as guest
  - popup changes to register or login depending on view
  - localstorage (or passport?) should auto-login recognized user
 b. My Feed
  - unregistered users get a preset feed
  - registered users get a feed for
  - all users can filter this view for tags, or filter to show politicans or bills.
    and with bills can filter by date / recent activity, or perhaps weighted relevance
  - selecting a feed item brings up an interest panel
  - starring a feed item saves it in your interest profile
  c. Interest Panel
   - for a bill or person, brings up a view (modal?) showing their info
   - starring an item saves it in interest profile of user
  d. Interest Profile
   - contains menu for tags of interest (so does feed?)
   - contains view option for starred items, which when selected bring up interest panel.
     when X-ed, removes from this feed.
   - sharable url
  e. Account
   - only viewable if registered
   - allows user to change upload profile picture, (or default), username
   - (?) email info to change password?
2. Schemas / Models:
 a. User
  - tags
  - starreditems (contains ids)
  - username
  - password (blocked out)
  - email
 b. GovItem
  b1. person
  b2. bill
  b3 (any)
   - number of stars
   - light reference to API to save storage (based on type?)
3. Routes:
  a. /api/GovItems
   - get
   - post (sent on star, on server decide edit or create)
  b. /api/Users
  - post
  - get
  - put (get)
  - delete
  c. /api/Updates
  - get
4. 3rd Party API resources:
  a. govtrack
   - bills and politicians info
   - only get info for last few years
5. General UI/UX:
  a. prevent object dupes
6. Passport:
 a. integrate Google auth


interest components:

1. Tags: interest tags (shared between components via service?) . you can remove or add tags.
2. Starred Items: list of starredItems per user. you can remove starred items,
or generate a graph from them (WIP)
3. DB integration: GovItem object gets created using unique identifier once starred. if another user stars the item,
it will reference the object already in the GovItem db so as to save storage


My interests view: sharable UI
     - display starred items by fetching their type and unique number from
     user's starredItems array
     - my interest tags edit, as well as UI for the tags in the main feed

1/26/16:

0. display message if no notifications

1. get shareable screenshot served from going to another users feed

1.5. init highlight tab and dropdown

1.7. design fixes

1. check if notifications are actually showing up (?)

2. remove scrollbars from landing modal

3. window sizing on interests page: don't resize based on content


1/27/16 stretch:

3. html5 form validation and other error handling


1/11/16 - infinity stretch :

4. non auth portal entry

5. Accounts UI
 - advanced options: delete + edit account / email password(?)

6. json web token auth

7. email notification of change

8. server side refactor

Stretch 1:

6. passport integration

7. 3rd party auth


Stretch 2:
0.  Notifications: compare user's starred GovItem (limit: 25 or so) to govtrack db
 and see if a field has changed.
1. GovItem Connection field:
  any GovItem which has a field match elsewhere in the API to another bill or person creates a
  relationship information.
2. Interest Profile Data Visualization

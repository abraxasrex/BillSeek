

My interests view: sharable UI
     - display starred items by fetching their type and unique number from
     user's starredItems array
     - my interest tags edit, as well as UI for the tags in the main feed


MVP TODO:

1. make a notifications test

A. conditions for a notification to be created
  a0. compare GovItem in database to GovItem in request
  a. parameters are an old item and a new item (As well as res object)
  b. compare old status date to new status date
  c. pass res to createNotification

B. what happens to create a notification:
  a. parameters are the old and new status dates and new descriptions (as well as the response object)
  b. create db notification object with the new description and date and send it to the user
  c. create delete hook (only option) on the client

2. check if notifications are actually showing up

.......

2/15/17
3. get shareable screenshot served from going to another users feed
  a. catch user id state params in constructor and trigger visitor condition
  b. visitor condition disallows all other behavior
  b2. add state auth middleware to routes

2/16/17
4. refactor starring system for efficiency
4.5 add text and date modeling to notification
4.75 : enhance above with unit tests and explicit typing

2/17/17:
5. window sizing on interests page: don't resize based on content
6. make sure garbage collector for govItems actually work
7. reset nav tabs after logout  

weekend:
1. security
2. deployment

2/17/17:
C# auction website



1/27/16 stretch:

3. html5 form validation and other error handling


1/11/16 - infinity stretch :

4. non auth portal entry

5. Accounts UI
 - advanced options: delete + edit account / email password(?)

6. json web token auth

7. email notification of change

8. server side refactor

Stretch 1:

6. passport integration

7. 3rd party auth


Stretch 2:
0.  Notifications: compare user's starred GovItem (limit: 25 or so) to govtrack db
 and see if a field has changed.
1. GovItem Connection field:
  any GovItem which has a field match elsewhere in the API to another bill or person creates a
  relationship information.
2. Interest Profile Data Visualization
